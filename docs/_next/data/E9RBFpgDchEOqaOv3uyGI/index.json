{"pageProps":{"articles":["### Willem and Mike [[play the game]](https://www.playwillem.app/) [[source code]](https://github.com/tayydev/willem-and-mike)\r\nWillem and Mike is a short top-down RPG game about a student declaring their college major at William & Mary. Willem and Mike was the first place winner of the William & Mary Cypher VIII Hackathon.\r\n\r\n![Dialog trees were a big focus during development](../img/willem_and_mike_gameplay_screenshot.png)\r\n\r\nI lead a team of three in brainstorming, rapid prototyping, asset creation, and play testing. The game is built in Unity and deployed with WebGL + Github Pages (so you can play it right now from your browser!). Previous Unity leadership experience, along with some FANTASTIC teammates helped us iterate at a very effective pace.","### Spycam [[website]](https://spycambot.net) [[library github]](https://github.com/tayydev/Riot4J)\r\nSpycam is a [Discord](https://discord.com) bot built using my own [open source wrapper](https://github.com/tayydev/Riot4J) of Riot Games' REST API to synthesize data from [VALORANT](https://playvalorant.com) (a competitive first-person shooter).\r\nFor example, Spycam can send a notification in a text channel when a user completes a match, or help them track their current win-streak.\r\nSpycam uses an OAuth flow to authenticate with players' Riot Accounts and the backend runs on Google Cloud managed with Docker. Monitoring is done with self-hosted Grafana, Prometheus, and Loki.\r\n\r\n![A Spycam command that aggregates data from a player's match history\r\n](../img/spycam_profile.jpg)\r\n\r\nAs the sole person behind this project I have prototyped the product, pitched/communicated with Riot Games for production API access, designed the server backend, and implemented all code.\r\n\r\nSpycam is currently used in over 1000 Discord servers and has been featured by  [IGN India](https://in.ign.com/valorant/170592/news/this-fan-made-valorant-discord-bot-is-something-you-need-to-get-right-now).","### Chess3\r\nChess3 is an original networked multiplayer turn-based strategy game built in [Unity](https://unity.com/) with C#.\r\nChess3 is a collaborative effort that is seeing active development.\r\nI manage the project and serve as our lead engineer.\r\nThe project is organized on a private GitHub repository, and we use issues/branches extensively to manage the concurrent work of four contributors.\r\n\r\n![A playtest screenshot from Chess3](../img/chess3_dev_example.png)\r\n\r\nThis is a great exercise in API design, and a chance to let other people interact with my code.\r\nSetting up (and teaching my friends how to use) source control for this is a fantastic opportunity to practice working as a team.","### Botw Freecam [[github]](https://github.com/tayydev/botw-freecam)\r\n\r\nI developed and maintain a fork of etra0's [fantastic custom camera](https://github.com/etra0/botw-freecam) for The Legend of Zelda: Breath of the Wild.\r\nI learned a bit of [Rust](https://www.rust-lang.org/) to take the core tools that he built, and then adapt them to better serve my needs.\r\n\r\n<div style=\"width: 100%\">\r\n    <div style=\"display: flex; justify-content: center;\">\r\n        <iframe class=\"graphic\" style=\"width: 90%\" height=\"450\" src=\"https://www.youtube.com/embed/t8j6uVliDqo\" title=\"YouTube video player\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n## A video that I produced using my modified camera tools\r\n\r\nI was really motivated to work on this because the existing tools were _so close_ to what I was looking for, but lacking a few deal-breaker features like editable paths and save states.\r\nI didn't have any knowledge of Rust at the time, but it was a great opportunity to dive in and see what I could figure out.\r\n","### GifHaven [[github]](https://github.com/tayydev/GifHaven)\r\n\r\nGifHaven is a WIP tool for finding, saving, storing, and aggregating gifs.\r\nGifHaven is being built with [Electron](https://www.electronjs.org/) and [Typescript](https://www.typescriptlang.org/) and is serving as a way for me to get my hands dirty with more interactive web design.\r\n\r\n![This screenshot shows off basic Tenor search functionality, as well as some very in-progress CSS](../img/gifhaven_dev_search.png)\r\n\r\nOne of the most rewarding parts about GifHaven is that I get the \"behind the curtain\" experience where I choose how much customization and control I want to expose to the user.\r\nRight now I'm focused on creating a flexible core framework that transparently communicates to users how their data is stored.\r\n","### AI Bot\r\nThe 'AI Bot' is a Discord bot built using fine-tuned [GPT-2 models](https://openai.com/blog/better-language-models) to create AI conversations that mimic human chat messages.\r\nThe project was my first time developing with the [Gradle](https://gradle.org)  build tool, and my first time working with a [Reactive Java Library](https://discord4j.com).\r\n\r\n![Output from the bot is humorous](../img/aibot_generation_example.png)\r\n\r\nI learned how to set up a basic SQLite database, and spent a lot of time optimizing and managing the massive computation load that the AI generation required. :3"]},"__N_SSG":true}